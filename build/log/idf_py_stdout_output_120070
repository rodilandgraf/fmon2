[1/13] Linking C static library esp-idf/spiffs/libspiffs.a
[2/13] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[3/13] Performing build step for 'bootloader'
[1/1] cd /home/rodrigo/ic_fmon/fmon2/build/bootloader/esp-idf/esptool_py && /home/rodrigo/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/rodrigo/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/rodrigo/ic_fmon/fmon2/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[4/13] No install step for 'bootloader'
[5/13] Building C object esp-idf/mlx90640_redar/CMakeFiles/__idf_mlx90640_redar.dir/redar_i2c_driver.c.obj
[6/13] Linking C static library esp-idf/mlx90640_redar/libmlx90640_redar.a
[7/13] Completed 'bootloader'
[8/13] Linking C static library esp-idf/main/libmain.a
[9/13] Generating ld/sections.ld
[10/13] Building C object CMakeFiles/fmon2.elf.dir/project_elf_src_esp32.c.obj
[11/13] Linking CXX executable fmon2.elf
[12/13] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/rodrigo/ic_fmon/fmon2/build/fmon2.bin
[13/13] cd /home/rodrigo/ic_fmon/fmon2/build/esp-idf/esptool_py && /home/rodrigo/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/rodrigo/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/rodrigo/ic_fmon/fmon2/build/partition_table/partition-table.bin /home/rodrigo/ic_fmon/fmon2/build/fmon2.bin
fmon2.bin binary size 0x2b810 bytes. Smallest app partition is 0x100000 bytes. 0xd47f0 bytes (83%) free.
